name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags
  workflow_dispatch: # Allow manual trigger

env:
  FLUTTER_VERSION: "3.24.5"

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - name: Get dependencies
        run: |
          cd the_paragliding_app
          flutter pub get

      - name: Build APK with API keys
        env:
          FFVL_API_KEY: ${{ secrets.FFVL_API_KEY }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          OPENAIP_API_KEY: ${{ secrets.OPENAIP_API_KEY }}
          CESIUM_ION_TOKEN: ${{ secrets.CESIUM_ION_TOKEN }}
        run: |
          cd the_paragliding_app
          flutter build apk --release \
            --dart-define=FFVL_API_KEY=${{ secrets.FFVL_API_KEY }} \
            --dart-define=GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} \
            --dart-define=OPENAIP_API_KEY=${{ secrets.OPENAIP_API_KEY }} \
            --dart-define=CESIUM_ION_TOKEN=${{ secrets.CESIUM_ION_TOKEN }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: the_paragliding_app/build/app/outputs/flutter-apk/app-release.apk

  build-android-bundle:
    name: Build Android App Bundle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - name: Get dependencies
        run: |
          cd the_paragliding_app
          flutter pub get

      - name: Build App Bundle with API keys
        env:
          FFVL_API_KEY: ${{ secrets.FFVL_API_KEY }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          OPENAIP_API_KEY: ${{ secrets.OPENAIP_API_KEY }}
          CESIUM_ION_TOKEN: ${{ secrets.CESIUM_ION_TOKEN }}
        run: |
          cd the_paragliding_app
          flutter build appbundle --release \
            --dart-define=FFVL_API_KEY=${{ secrets.FFVL_API_KEY }} \
            --dart-define=GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} \
            --dart-define=OPENAIP_API_KEY=${{ secrets.OPENAIP_API_KEY }} \
            --dart-define=CESIUM_ION_TOKEN=${{ secrets.CESIUM_ION_TOKEN }}

      - name: Upload App Bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-bundle
          path: the_paragliding_app/build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS (without signing)
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - name: Get dependencies
        run: |
          cd the_paragliding_app
          flutter pub get

      - name: Build iOS (no signing)
        env:
          FFVL_API_KEY: ${{ secrets.FFVL_API_KEY }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          OPENAIP_API_KEY: ${{ secrets.OPENAIP_API_KEY }}
          CESIUM_ION_TOKEN: ${{ secrets.CESIUM_ION_TOKEN }}
        run: |
          cd the_paragliding_app
          flutter build ios --release --no-codesign \
            --dart-define=FFVL_API_KEY=${{ secrets.FFVL_API_KEY }} \
            --dart-define=GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} \
            --dart-define=OPENAIP_API_KEY=${{ secrets.OPENAIP_API_KEY }} \
            --dart-define=CESIUM_ION_TOKEN=${{ secrets.CESIUM_ION_TOKEN }}

  create-release:
    name: Create GitHub Release
    needs: [build-android, build-android-bundle]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk

      - name: Download App Bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-bundle

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-release.apk
            app-release.aab
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}